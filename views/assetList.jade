extends layout
block head

  title Your assets
  link(rel="stylesheet", href="/css/ext-all.css")
  script(src='/js/ext-all.js')

  include collectionList.js

  script
    Ext.onReady(function() {
        var store = Ext.create('Ext.data.Store', {
            autoLoad: true,
            storeId:'bodegaStore',
            fields:['name', 'description', 'file', 'baseprice'],
            proxy: {
                type: 'ajax',
                // load remote data using HTTP
                url: '/json/asset/list/#{listType}',
                // specify a XmlReader (coincides with the XML format of the returned data)
                reader: {
                    type: 'json',
                    root: 'assets'
                },
                writer: {
                    type: 'json',
                    writeAllFields: false,
                    root: 'assets'
                }
            },
            listeners: {
                write: function(proxy, operation) {
                    console.log(operation);
                    if (operation.action == 'destroy') {
                        main.child('#form').setActiveRecord(null);
                    }
                    Ext.example.msg(operation.action, operation.resultSet.message);
                },
                update: function(store, record, operation, eOpts ) {
                    record.raw.name = record.data.name;
                    record.raw.description = record.data.description;
                    record.raw.baseprice = record.data.baseprice;
                    console.log(record.raw)
                    Ext.Ajax.request({
                        url: '/json/asset/update/' + record.raw.id,
                        method: 'POST',
                        params: $.param({info: record.raw}),
                        callback: function(response) {
                            store.load();
                        }
                    });
                }
            }
        });

        var cellEditing = Ext.create('Ext.grid.plugin.CellEditing', {
            clicksToEdit: 1
        });

        var view = Ext.create('Ext.grid.Panel', {
            store: Ext.data.StoreManager.lookup('bodegaStore'),
            selType: 'checkboxmodel',
            inline: true,
            columns: [
                { header: 'Name',  dataIndex: 'name', field: {allowBlank: false}},
                { header: 'Description', dataIndex: 'description', flex: 1, field: {allowBlank: false}},
                { header: 'File name', dataIndex: 'file', field: {allowBlank: false}},
                { header: 'Base price', dataIndex: 'baseprice', field: {xtype: 'numberfield', allowBlank: false}}
            ],
            dockedItems: [{
                xtype: 'toolbar',
                dock: 'top',
                items: [{
                    text: 'Create Assets',
                    scope: this,
                    handler: function() {
                        window.location.href = "/asset/create";
                    }
                }, 'Search', {
                    xtype: 'textfield',
                    name: 'searchField',
                    hideLabel: true,
                    width: 200,
                    listeners: {
                        change: {
                            fn: function(){
                                store.clearFilter();

                                var search = view.down('textfield[name=searchField]').getValue();
                                store.filterBy(function (record) {
                                    //name containing the textfield value
                                    var name = record.get('name').toLowerCase();
                                    var desc = record.get('description').toLowerCase();
                                    return name.indexOf(search) !== -1 || desc.indexOf(search) !== -1;
                               });
                            },
                            scope: this,
                            buffer: 100
                        }
                    }
                }, {
                    xtype: 'combobox',
                    editable: false,
                    queryMode: 'local',
                    displayField: 'name',
                    valueField: 'value',
                    value: '#{listType}',
                    store: Ext.create('Ext.data.Store', {
                        fields: ['name', 'value'],
                        data: [{'name': 'All assets', 'value': 'all'},
                            {'name': 'Published assets', 'value': 'published'},
                            {'name': 'Review pending', 'value': 'incoming'}],
                    }),
                    listeners: {
                        'select': function(combo, record, index) {
                            console.log('store.proxy')
                            store.proxy.url = '/json/asset/list/' + combo.getValue();
                            store.load();
                        }
                    }
                }, {
                    xtype: 'button',
                    text: 'Delete assets',
                    hidden: true,
                    handler: function() {
                        Ext.MessageBox.confirm('Delete', 'Are you sure you want to delete the selected items?', function(btn){
                            if(btn === 'yes'){
                                var s = view.getSelectionModel().getSelection();
                                selected = [];
                                Ext.each(s, function (item) {
                                    Ext.Ajax.request({
                                        url: '/json/asset/delete/' + item.data.id,
                                        callback: function(response) {
                                            store.load();
                                        }
                                    });
                                });
                            }
                        });
                    }
                }]
            }],
            listeners: {
                selectionchange: function()
                {
                    var s = view.getSelectionModel().getSelection();
                    if (s.length > 0) {
                        view.dockedItems.get(1).items.get(4).show();
                    } else {
                        view.dockedItems.get(1).items.get(4).hide();
                    }
                }
            },
            columnWidth: 1,
            border: 0,
            region: 'center',
            plugins: [cellEditing]
        });

        var collectionList = createCollectionList();

        var collectionsPanel = {
            region: 'east',
            items: [collectionList],
            title: 'Collections',
            width: 300,
            split: true,
            collapsible: true,
            collapsed: true,
            floatable: false
        }

        var layout = Ext.create('Ext.Viewport', {
            layout:'border',
            bodyBorder: false,
            padding: '48 0 0 0',
            bodyStyle: 'width:100%',
            items: [view, collectionsPanel],
            renderTo: Ext.getBody(),
            border: 0,
        });


    });


block body
  .title
    <br/>
    include navigator
    .container-fluid
